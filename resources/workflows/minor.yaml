# yaml-language-server: $schema=../state-machine-schema.json
---
name: 'minor'
description: 'A streamlined workflow for small-impact changes: Explore (analysis + design) → Implement (code + test + commit) - optimized for minor enhancements'
initial_state: 'explore'

# Enhanced metadata for better discoverability
metadata:
  complexity: 'low'
  bestFor:
    - 'Small bug fixes'
    - 'Minor feature enhancements'
    - 'Code refactoring'
    - 'Documentation updates'
  useCases:
    - 'Adding a new parameter to an existing function'
    - 'Improving error messages'
    - 'Small UI adjustments'
  examples:
    - 'Fix a typo in user interface text'
    - 'Add validation to an input field'
    - 'Enhance logging in a specific module'

# States with default instructions and transitions
states:
  explore:
    description: 'Analysis and design phase - understanding and planning without implementation'
    default_instructions: >
      You are in the exploration phase for minor enhancement. 
      This phase should be efficient since it's a minor enhancement.
      Understand the problem, analyze existing patterns, and design your approach. 
      Consider the scope and impact of the change. Document requirements in $REQUIREMENTS_DOC and respect the design approach in $DESIGN_DOC. 
      Document your analysis and design decisions in the plan file. 
      Focus on analysis and design only - do not write any code yet.
    transitions:
      - trigger: 'exploration_complete'
        to: 'implement'
        additional_instructions: 'Analysis and design complete! ✅ Now transition to implementation phase. You have a clear understanding of the problem and a solid design approach. Keep the scope focused on the minor enhancement. Mark completed exploration tasks.'
        transition_reason: 'Analysis and design complete, ready for streamlined implementation'

      - trigger: 'abandon_feature'
        to: 'explore'
        instructions: >
          Minor enhancement abandoned. Revert potentially made changes. 
          Return to exploration state for new tasks.
          The plan file will remain for future reference if needed.
        additional_instructions: 'Minor enhancement development abandoned. Clean up any analysis work and prepare for new tasks.'
        transition_reason: 'User decided to abandon current minor enhancement'

  implement:
    description: 'Combined implementation phase - code, test, and commit'
    default_instructions: "You are in the implementation phase for minor enhancement. This phase combines coding, testing, and commit preparation. Follow your design from $DESIGN_DOC and ensure the relevant requirements from $REQUIREMENTS_DOC are met. Write clean, focused code for the minor enhancement. Test your changes to ensure they work correctly and don't break existing functionality. Prepare documentation and commit when ready. Update progress in the plan file."
    transitions:
      - trigger: 'need_more_analysis'
        to: 'explore'
        additional_instructions: 'Implementation revealed gaps in analysis or design. Focus on the specific areas that need clarification before continuing with implementation.'
        transition_reason: 'Implementation work revealed need for more analysis or design'

      - trigger: 'implementation_complete'
        to: 'finalize'
        additional_instructions: 'Implementation is complete! Clean up code and finalize documentation to ensure everything is ready for delivery. Mark all implementation tasks as complete.'
        transition_reason: 'Implementation complete, ready for finalization'

      - trigger: 'abandon_feature'
        to: 'explore'
        instructions: >
          Minor enhancement abandoned during implementation. Clean up any incomplete code and return to exploration.
          The plan file and any completed work will remain for future reference.
        additional_instructions: 'Minor enhancement abandoned during implementation. Clean up any incomplete code and prepare for new tasks.'
        transition_reason: 'User decided to abandon minor enhancement during implementation'

  finalize:
    description: 'Code cleanup and documentation finalization'
    default_instructions: >
      You are in the finalize phase. This phase ensures code quality and documentation accuracy through systematic cleanup and review.

      **STEP 1: Code Cleanup**
      Systematically clean up development artifacts:

      1. **Remove Debug Output**: Search for and remove all temporary debug output statements used during development.
         Look for language-specific debug output methods (console logging, print statements, debug output functions).
         Remove any debugging statements that were added for development purposes.

      2. **Review TODO/FIXME Comments**: 
         - Address each TODO/FIXME comment by either implementing the solution or documenting why it's deferred
         - Remove completed TODOs
         - Convert remaining TODOs to proper issue tracking if needed

      3. **Remove Debugging Code Blocks**:
         - Remove temporary debugging code, test code blocks, and commented-out code
         - Clean up any experimental code that's no longer needed
         - Ensure proper error handling replaces temporary debug logging

      **STEP 2: Documentation Review**
      Review and update documentation to reflect final implementation:

      1. **Compare Against Implementation**: Review documentation against actual implemented functionality
      2. **Update Changed Sections**: Only modify documentation sections that have functional changes
      3. **Remove Development Progress**: Remove references to development iterations, progress notes, and temporary decisions
      4. **Focus on Final State**: Ensure documentation describes the final implemented state, not the development process
      5. **Verify Accuracy**: Ensure all examples, API descriptions, and usage instructions are accurate

      **STEP 3: Final Validation**
      - Run existing tests to ensure cleanup didn't break functionality
      - Verify documentation accuracy with a final review
      - Ensure minor enhancement is ready for delivery

      Update the plan file with finalization progress and mark completed tasks.
    transitions:
      - trigger: 'need_implementation_changes'
        to: 'implement'
        additional_instructions: 'Finalization revealed issues that require implementation changes. Focus on the specific problems identified during final review.'
        transition_reason: 'Finalization revealed issues requiring implementation changes'

      - trigger: 'finalization_complete'
        to: 'explore'
        additional_instructions: 'Minor enhancement is complete and finalized! All work is finished and ready for delivery. Prepare for the next development task.'
        transition_reason: 'Minor enhancement delivery complete, ready for next task'

      - trigger: 'abandon_feature'
        to: 'explore'
        additional_instructions: 'Minor enhancement abandoned during finalization. Clean up any finalization artifacts and prepare for new tasks.'
        transition_reason: 'User decided to abandon minor enhancement during finalization'
