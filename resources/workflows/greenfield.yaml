# yaml-language-server: $schema=../state-machine-schema.json
---
name: 'greenfield'
description: 'A comprehensive workflow for starting new projects from scratch: Ideation, Architecture, Plan, Code, Document - ideal for greenfield projects requiring thorough upfront planning'
initial_state: 'ideation'

# Enhanced metadata for better discoverability
metadata:
  complexity: 'high'
  bestFor:
    - 'New projects from scratch'
    - 'Greenfield development'
    - 'Complex system design'
    - 'Comprehensive planning needed'
  useCases:
    - 'Starting a new application'
    - 'Building a new service'
    - 'Creating a new library'
  examples:
    - 'Build a new web application'
    - 'Create a microservice architecture'
    - 'Develop a new CLI tool'

# States with default instructions and transitions
states:
  ideation:
    description: 'Deep requirements discovery and PRD creation phase'
    default_instructions: "You are in the ideation phase for greenfield project. Your goal is to create a comprehensive Requirements Document in $REQUIREMENTS_DOC. Ask extensive questions to understand: WHAT the system should do, WHO will use it, WHY it's needed, and WHAT'S in/out of scope. Explore existing solutions and alternatives. Don't discuss technical implementation yet - focus purely on understanding the problem space and requirements. Document all findings in $REQUIREMENTS_DOC and the plan file."
    transitions:
      - trigger: 'ideation_complete'
        to: 'architecture'
        additional_instructions: 'Ideation is complete! ✅ Present the PRD to the user. Mark completed ideation tasks.'
        transition_reason: 'PRD is complete with clear requirements, ready for technical architecture design'
        review_perspectives:
          - perspective: 'business_analyst'
            prompt: 'Review the Product Requirements Document for completeness, clarity, and business value. Ensure all stakeholder needs are captured, requirements are testable, and scope is well-defined.'
          - perspective: 'ux_expert'
            prompt: 'Evaluate user experience requirements and usability considerations. Ensure user personas, workflows, and interaction patterns are properly defined for the greenfield project.'

      - trigger: 'abandon_project'
        to: 'ideation'
        instructions: >
          Project development abandoned. Return to ideation state for new projects.
          The plan file will remain for future reference if needed.
        additional_instructions: 'Project development abandoned. Clean up any ideation work and prepare for new projects.'
        transition_reason: 'User decided to abandon current project development'

  architecture:
    description: 'Tech stack selection and architecture design phase'
    default_instructions: "You are in the architecture phase. Based on the requirements from $REQUIREMENTS_DOC, now design the technical solution. Ask about the user's technical preferences and experience. Challenge their choices by presenting alternatives. Evaluate pros and cons of different tech stacks, frameworks, and architectural patterns. Consider non-functional requirements like scalability, performance, maintainability, and deployment. Create a comprehensive architecture document in $ARCHITECTURE_DOC. Don't start coding yet - focus on technical design decisions."
    transitions:
      - trigger: 'need_more_ideation'
        to: 'ideation'
        additional_instructions: 'Architecture work revealed gaps in requirements understanding. Focus on the specific requirements areas that need clarification before continuing with technical design.'
        transition_reason: 'Architecture work revealed need for more requirements clarification'

      - trigger: 'architecture_complete'
        to: 'plan'
        additional_instructions: 'Architecture is complete! ✅ You have a solid technical foundation with clear tech stack choices and architectural decisions. Present the implementation plan to the user and document it thoroughly. Mark completed architecture tasks.'
        transition_reason: 'Technical architecture is complete, ready for implementation planning'
        review_perspectives:
          - perspective: 'architect'
            prompt: 'Review the technical architecture for completeness, scalability, and maintainability. Ensure technology choices are appropriate and architectural patterns are sound for a greenfield project.'
          - perspective: 'security_expert'
            prompt: 'Evaluate security architecture, data protection strategies, and potential vulnerabilities. Ensure security is built into the foundation of the greenfield project from the start.'

      - trigger: 'abandon_project'
        to: 'ideation'
        instructions: >
          Project development abandoned during architecture phase. Return to ideation state for new projects.
          The plan file and PRD will remain for future reference.
        additional_instructions: 'Project development abandoned during architecture phase. Clean up any architecture work and prepare for new projects.'
        transition_reason: 'User decided to abandon project during architecture phase'

  plan:
    description: 'Implementation planning phase based on established architecture'
    default_instructions: 'You are in the planning phase. Based on your completed architecture in $ARCHITECTURE_DOC and requirements from $REQUIREMENTS_DOC, create a detailed implementation strategy. Break down the work into specific, actionable tasks considering the chosen tech stack and architectural decisions. Plan the implementation order, identify dependencies, and consider potential risks. Document the detailed design in $DESIGN_DOC and the plan thoroughly with clear milestones. Important: Tasks for the actual coding should be organized in the Code section of the plan.'
    transitions:
      - trigger: 'need_architecture_changes'
        to: 'architecture'
        additional_instructions: "Planning revealed issues with the current architecture. Consider what you've learned during planning and adjust the technical design accordingly. Document the changes and reasons."
        transition_reason: 'Planning work revealed need to revise the architecture'

      - trigger: 'plan_complete'
        to: 'code'
        additional_instructions: "Implementation plan is complete! ✅ Now transition to coding phase. Read specific documentation before using the chosen libraries and frameworks. Follow the architectural patterns and tech stack decisions you've made. Modularize your code according to best practices. Stay focused on the current project scope defined in your PRD. Mark completed planning tasks."
        transition_reason: 'Implementation plan is complete and ready for coding'

      - trigger: 'abandon_project'
        to: 'ideation'
        instructions: >
          Project development abandoned during planning. Return to ideation state for new projects.
          The plan file, PRD, and architecture documentation will remain for future reference.
        additional_instructions: 'Project development abandoned during planning. Clean up any planning work and prepare for new projects.'
        transition_reason: 'User decided to abandon project during planning phase'

  code:
    description: 'Implementation phase following the established plan and architecture'
    default_instructions: 'You are in the implementation phase. Follow your plan and detailed design from $DESIGN_DOC to build the solution using the architecture from $ARCHITECTURE_DOC. Ensure all requirements from $REQUIREMENTS_DOC you are currently working on are met. Write clean, well-structured code with proper error handling. Prevent regression by building, linting, and executing existing tests. Stay flexible and adapt the plan as you learn more during implementation, but maintain alignment with your architecture decisions. Update progress in the plan file. Important: Focus on tasks in the Code section of your plan.'
    transitions:
      - trigger: 'need_replanning'
        to: 'plan'
        additional_instructions: "Implementation revealed issues with the current plan. Consider what you've learned during coding and adjust the implementation strategy accordingly while maintaining architectural consistency. Document the changes and reasons."
        transition_reason: 'Implementation work revealed need to revise the plan'

      - trigger: 'need_architecture_changes'
        to: 'architecture'
        additional_instructions: 'Implementation revealed fundamental issues with the architecture that require design changes. Focus on the specific architectural problems that are blocking implementation progress.'
        transition_reason: 'Implementation work revealed need for architectural changes'

      - trigger: 'code_complete'
        to: 'finalize'
        additional_instructions: 'Implementation is complete! ✅ Now transition to finalization phase. Mark completed implementation tasks.'
        transition_reason: 'Core implementation is complete, ready for comprehensive documentation'

      - trigger: 'abandon_project'
        to: 'ideation'
        instructions: >
          Project development abandoned during implementation. Clean up any incomplete code and return to ideation.
          The plan file, PRD, architecture documentation, and any completed work will remain for future reference.
        additional_instructions: 'Project development abandoned during implementation. Clean up any incomplete code and prepare for new projects.'
        transition_reason: 'User decided to abandon project during implementation'

  finalize:
    description: 'Code cleanup and documentation finalization'
    default_instructions: >
      You are in the finalize phase. This phase ensures code quality and documentation accuracy through systematic cleanup and review.

      **STEP 1: Code Cleanup**
      Systematically clean up development artifacts:

      1. **Remove Debug Output**: Search for and remove all temporary debug output statements used during development.
         Look for language-specific debug output methods (console logging, print statements, debug output functions).
         Remove any debugging statements that were added for development purposes.

      2. **Review TODO/FIXME Comments**: 
         - Address each TODO/FIXME comment by either implementing the solution or documenting why it's deferred
         - Remove completed TODOs
         - Convert remaining TODOs to proper issue tracking if needed

      3. **Remove Debugging Code Blocks**:
         - Remove temporary debugging code, test code blocks, and commented-out code
         - Clean up any experimental code that's no longer needed
         - Ensure proper error handling replaces temporary debug logging

      **STEP 2: Documentation Review**
      Review and update documentation to reflect final implementation:

      1. **Compare Against Implementation**: Review documentation against actual implemented functionality
      2. **Update Changed Sections**: Only modify documentation sections that have functional changes
      3. **Remove Development Progress**: Remove references to development iterations, progress notes, and temporary decisions
      4. **Focus on Final State**: Ensure documentation describes the final implemented state, not the development process
      5. **Verify Accuracy**: Ensure all examples, API descriptions, and usage instructions are accurate
      6. **Comprehensive Documentation**: Ensure project has complete documentation for newcomers including setup, usage, architecture overview, and contribution guidelines

      **STEP 3: Final Validation**
      - Run existing tests to ensure cleanup didn't break functionality
      - Verify documentation accuracy with a final review
      - Ensure project is ready for users and contributors

      Update the plan file with finalization progress and mark completed tasks.
    transitions:
      - trigger: 'need_code_changes'
        to: 'code'
        additional_instructions: 'Finalization revealed issues that require code changes. Focus on the problems identified during final review that affect usability or functionality.'
        transition_reason: 'Finalization revealed issues requiring code changes'

      - trigger: 'finalization_complete'
        to: 'ideation'
        additional_instructions: 'Greenfield project is complete and ready for delivery! All phases successfully finished. Prepare for the next greenfield project.'
        transition_reason: 'Project delivery complete with finalized code and documentation, ready for next greenfield project'

      - trigger: 'abandon_project'
        to: 'ideation'
        additional_instructions: 'Project development abandoned during finalization. Clean up any finalization artifacts and prepare for new projects.'
        transition_reason: 'User decided to abandon project during finalization phase'
