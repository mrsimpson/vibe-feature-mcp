# Example workflow demonstrating the review system
# This shows how to add review_perspectives to transitions
---
name: 'example-with-reviews'
description: 'Example workflow demonstrating review perspectives for phase transitions'
initial_state: 'requirements'

states:
  requirements:
    description: 'Gathering and analyzing requirements'
    default_instructions: 'Gather requirements from stakeholders. Focus on understanding goals, scope, constraints, and success criteria. Document requirements in the plan file.'
    transitions:
      - trigger: 'requirements_complete'
        to: 'design'
        instructions: 'Requirements complete! Transition to design phase. Focus on technical architecture and implementation approach.'
        transition_reason: 'All requirements gathered, ready for technical design'
        review_perspectives:
          - perspective: 'business_analyst'
            prompt: 'Review requirements completeness, clarity, and business value. Ensure all stakeholder needs are captured and requirements are testable. Check for missing edge cases or unclear acceptance criteria.'
          - perspective: 'ux_expert'
            prompt: 'Evaluate user experience implications and usability requirements. Ensure user needs and workflows are properly defined. Identify potential UX challenges or accessibility concerns.'

  design:
    description: 'Technical design and architecture planning'
    default_instructions: 'Design the technical solution. Focus on architecture, technologies, data models, and implementation approach. Document design decisions in the plan file.'
    transitions:
      - trigger: 'design_complete'
        to: 'implementation'
        instructions: 'Design complete! Transition to implementation. Build the solution following the architectural decisions.'
        transition_reason: 'Technical design finalized, ready for implementation'
        review_perspectives:
          - perspective: 'architect'
            prompt: 'Review technical architecture, design patterns, and system integration. Ensure scalability, maintainability, and alignment with existing systems. Evaluate technology choices and architectural decisions.'
          - perspective: 'security_expert'
            prompt: 'Evaluate security considerations, data protection, and potential vulnerabilities in the proposed design. Review authentication, authorization, data handling, and potential attack vectors.'

  implementation:
    description: 'Building the solution according to design'
    default_instructions: 'Implement the solution following best practices. Focus on code quality, error handling, and maintainability. Write clean, well-documented code.'
    transitions:
      - trigger: 'implementation_complete'
        to: 'testing'
        instructions: 'Implementation complete! Transition to testing phase. Create comprehensive tests and validate the solution.'
        transition_reason: 'Core implementation finished, ready for testing'
        review_perspectives:
          - perspective: 'senior_software_developer'
            prompt: 'Review code quality, best practices, and implementation approach. Ensure clean, maintainable, and efficient code. Check for proper error handling, logging, and code organization.'
          - perspective: 'performance_engineer'
            prompt: 'Assess performance implications, resource usage, and potential bottlenecks in the implementation. Review algorithms, data structures, and system resource utilization.'

  testing:
    description: 'Comprehensive testing and validation'
    default_instructions: 'Create and execute comprehensive tests. Validate feature completeness and ensure everything works as expected.'
    transitions:
      - trigger: 'testing_complete'
        to: 'complete'
        instructions: 'Testing complete! All tests pass and the feature is validated. Ready for delivery.'
        transition_reason: 'All testing completed successfully, feature ready for delivery'
        review_perspectives:
          - perspective: 'business_analyst'
            prompt: 'Verify that all requirements have been met and business objectives are achieved. Ensure the solution delivers the expected business value and meets acceptance criteria.'
          - perspective: 'ux_expert'
            prompt: 'Confirm user experience goals are met and the solution is user-friendly and accessible. Validate that user workflows are intuitive and efficient.'

  complete:
    description: 'Feature completion and delivery'
    default_instructions: 'Feature development complete! Summarize accomplishments and ensure all documentation is finalized.'
    transitions:
      - trigger: 'restart_development'
        to: 'requirements'
        instructions: 'Starting new development cycle. Prepare to gather requirements for the next feature.'
        transition_reason: 'Beginning new development cycle'
        # No review_perspectives needed for restart transitions
